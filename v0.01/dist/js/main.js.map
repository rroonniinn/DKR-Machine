{"version":3,"sources":["main.js"],"names":["document","addEventListener","playerBtn","querySelector","bpmForm","bpmInput","bpmUp","bpmDown","allCells","cellsColums","querySelectorAll","keyboardKeys","instrumentsBtns","tempo","mms","bpmToMms","soundKick","counter","soundSnare","value","soundCrash","soundTomFlag","Howl","src","volume","soundHh","soundTom","ev","preventDefault","soundSnareFlag","keyPressed","Number","keyTable","99","104","116","115","107","charCode","keyNb","classList","toggle","setTimeout","console","log","undefined","whatToToggle","play","timeline","i","length","innerHTML","timelineTravers","j","clearInterval","setInterval","playMusic","this","target","getAttribute","add","id","includes","active","yCord","charAt","xCord","soundHhFlag","soundCrashFlag","soundKickFlag"],"mappings":"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","file":"main.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function(){   \n\n// Szukanie elementów:\n\nconst playerBtn = document.querySelector('#btn-play-stop');\nconst bpmForm = document.querySelector('#form-bmp');\nconst bpmInput = document.querySelector('#form-bmp__input');\nconst bpmUp = document.querySelector('#btn-tempo__up');\nconst bpmDown = document.querySelector('#btn-tempo__down');\nconst allCells = document.querySelector('.tabs-table');\n\n\nconst cellsColums = [\n    document.querySelectorAll('[data-x=\"0\"]'),\n    document.querySelectorAll('[data-x=\"1\"]'),\n    document.querySelectorAll('[data-x=\"2\"]'),\n    document.querySelectorAll('[data-x=\"3\"]'),\n    document.querySelectorAll('[data-x=\"4\"]'),\n    document.querySelectorAll('[data-x=\"5\"]'),\n    document.querySelectorAll('[data-x=\"6\"]'),\n    document.querySelectorAll('[data-x=\"7\"]')\n]\n\nconst keyboardKeys = document.querySelectorAll('[id^=btn-key-]');\n// console.log ( keyboardKeys );\n\nconst instrumentsBtns = document.querySelectorAll('[id^=btn-inst]');\n\n\n// Funkcje startowe\n\nfunction bpmToMms(bpm) {\n    return (60000/bpm/2); // /2, gdyż idziemy po 8-kach a nie ćwierć nutach, dla 16-tek byłoby to dzielone na 4\n}\n\n\n// Podstawowe zmienne na start:\n\nbpmInput.value = 125; // startowe bpm\nlet counter = 1; // do obsługi playHead\nlet toPlay = true; // do obsługi guzika playerBtn\nlet tempo = bpmInput.value; // tempo\nlet mms = bpmToMms(tempo);\n\n\n//  Biblioteka dzięków (Howler)\n\nconst soundCrash = new Howl({src: ['sound/crash.mp3'],volume: 0.4});\nconst soundHh = new Howl({src: ['sound/hh.mp3'],volume: 1});\nconst soundKick = new Howl({src: ['sound/kick.mp3']});\nconst soundSnare = new Howl({src: ['sound/snare.mp3']});\nconst soundTom = new Howl({src: ['sound/tom.mp3']});\n\n// brzydkie ... inicjacja volumenu\nlet soundCrashFlag = 'on';\nlet soundHhFlag = 'on';\nlet soundKickFlag = 'on';\nlet soundSnareFlag = 'on';\nlet soundTomFlag = 'on';\n\n\n// _____________ Obsługa zmiany tempa _________________ //\n\n// enterem \n\nbpmForm.addEventListener('submit',function(ev){\n    ev.preventDefault();\n    tempo = bpmInput.value;\n    mms = bpmToMms(tempo);\n\n})\n\n// klikiem na zewnątrz\n\nbpmInput.addEventListener('blur',function(ev){\n    ev.preventDefault();\n    tempo = bpmInput.value;\n    mms = bpmToMms(tempo);\n\n})\n\n// klikiem + \nbpmUp.addEventListener('click',function(){\n    bpmInput.value = Number(bpmInput.value) + 5;\n    tempo = bpmInput.value;\n    mms = bpmToMms(tempo);\n})\n\n\n\n// klikiem - \nbpmDown.addEventListener('click',function(){\n    bpmInput.value = Number(bpmInput.value) - 5;\n    tempo = bpmInput.value;\n    mms = bpmToMms(tempo);\n\n})\n\n\n// _____________ Obsługa klawiszy _______________ //\n\nfunction keyPressed(ev) {\n    // ev.preventDefault();\n\n    const keyTable = {\n        99    : soundCrash,    // 99 - c\n        104   : soundHh,       // 104 - h\n        116   : soundTom,      // 116 - t\n        115   : soundSnare,    // 115 - s \n        107   : soundKick      // 107 - k \n    };\n\n    // toglowanie koloru na keyboardzie\n    function whatToToggle (keyNb) {\n        keyboardKeys[keyNb].classList.toggle('tabs__btn--key-active');\n        setTimeout(function () {\n            keyboardKeys[keyNb].classList.toggle('tabs__btn--key-active')\n        }, 400);\n        console.log ( keyNb );\n    }\n\n    // const keyTablePressed = {\n    //     99    : whatToToggle(0),    // 99 - c\n    //     104   : whatToToggle(1),       // 104 - h\n    //     116   : whatToToggle(2),      // 116 - t\n    //     115   : whatToToggle(3),    // 115 - s \n    //     107   : whatToToggle(4)      // 107 - k \n\n    // };\n        \n    if (keyTable[ev.charCode]!== undefined) {\n        keyTable[ev.charCode].play();\n        \n        // to powino działać, a nie działa... :( doweidzieć się dlaczego - już wiem dlaczego...\n        // bo wywołuję funkcj w zmiennej / tabeli keyTablePressed....\n        // keyTablePressed[ev.charCode];\n\n        // brzydkie rozwiązanie:\n        \n        if (ev.charCode === 99) {\n            whatToToggle(0);\n        } else if (ev.charCode === 104){\n            whatToToggle(1);\n        } else if (ev.charCode === 116){\n            whatToToggle(2);\n        } else if (ev.charCode === 115){\n            whatToToggle(3);\n        } else if (ev.charCode === 107){\n            whatToToggle(4);\n        }\n        \n\n    } else {\n        console.log ( 'nieobsługiwany' );\n    }\n}\n\n/* Oval: */\n\ndocument.addEventListener('keypress',keyPressed);\n\n// _____________ Obsługa timelineu _______________ //\n\nconst timeline = [\n    [0,0,0,0,0,0,0,0], // crash\n    [1,1,1,1,1,1,1,1], // hh\n    [0,0,0,0,0,0,0,0], // tom\n    [0,0,1,0,0,0,1,0], // snare\n    [1,0,0,0,1,0,0,0], // kick\n]\n\n// _____________ Obsługa głowicy ____________ //\n\nfunction playMusic() {\n        if (timeline[0][counter-1] != 0) { soundCrash.play();}  // inst 1\n        if (timeline[1][counter-1] != 0) { soundHh.play();}     // inst 2\n        if (timeline[2][counter-1] != 0) { soundTom.play();}    // inst 3\n        if (timeline[3][counter-1] != 0) { soundSnare.play();}  // inst 4    \n        if (timeline[4][counter-1] != 0) { soundKick.play();}  // inst 5        \n        \n        \n        // Zaznaczanie kolumny na której znajduje się playhead\n        \n    \n        for (let i=0;i<cellsColums[counter-1].length;i++) {\n            cellsColums[counter-1][i].innerHTML = '<div class=\"playheadActive\"></div>' ;\n        } \n        if (counter!=1) {\n            for (let i=0;i<cellsColums[counter-2].length;i++) {\n                cellsColums[counter-2][i].innerHTML = '' ;\n            }   \n        } else {\n            for (let i=0;i<cellsColums[counter+6].length;i++) {\n                cellsColums[counter+6][i].innerHTML = '' ;\n            }\n        }\n\n\n        // for (let i=0;i<cellsColums[counter-1].length;i++) {\n        //     cellsColums[counter-1][i].innerText = 'x' ;\n        // } \n        // if (counter!=1) {\n        //     for (let i=0;i<cellsColums[counter-2].length;i++) {\n        //         cellsColums[counter-2][i].innerText = '' ;\n        //     }   \n        // } else {\n        //     for (let i=0;i<cellsColums[counter+6].length;i++) {\n        //         cellsColums[counter+6][i].innerText = '' ;\n        //     }\n        // }\n\n\n\n        counter++;\n        \n        if (counter === 9) {\n            counter = 1;\n        }\n    \n}\n\n// _________ Obsługa guzika play / stop ________ //\n\nlet timelineTravers = false;\n\nfunction chooseMusic(ev) {\n    ev.preventDefault();\n\n    if(timelineTravers !== false) {\n        clearInterval(timelineTravers);\n        timelineTravers = false;\n        counter = 1;\n    } else {\n        timelineTravers = setInterval(playMusic, mms);\n    }\n\n    toPlay = false;        \n    // czyszczenie głowicy (bo zostawała widoczna)\n\n    for (var i=0;i<cellsColums.length;i++) {\n        for (var j=0;j<cellsColums[i].length;j++) {\n            cellsColums[i][j].innerHTML = '' ;\n        }\n    }\n\n    //zmiana ikonki pause / play\n    this.classList.toggle('controls-pause');\n\n\n\n}\n\n\nplayerBtn.addEventListener('click', chooseMusic);\n\n\n// __________ Obsługa boardu.... ______________\n\n// Render startowego stanu boardu:\n\n\n\nfor (let i=0;i<timeline.length;i++) {\n    for (let j=0;j<timeline[i].length;j++) {\n        let statusStart = timeline[i][j];        \n        \n        if (statusStart===1) {\n            // to jest też słabe bo szukam po ID a nie po data secie - nalealby to przerobć na data set jakoś\n            document.querySelector(`#x${j}y${i}`).classList.add('tabs-table__cell--active');            \n        }\n    }\n}\n\n\n\n// on / off kwadratu na boardzie (click)\n\nallCells.addEventListener('click',function(ev){\n    ev.preventDefault();\n\n    \n    if (ev.target.id.includes('x')) {\n        // zasadniczo nie jest najlepsze bo jeśli inny id będzie zawierał x to się też złapie...\n\n\n        ev.target.dataset.active = '1'; \n        ev.target.classList.toggle('tabs-table__cell--active')\n\n        const cellId = ev.target.getAttribute('id');\n        // console.log ( cellId );\n        const yCord = Number(cellId.charAt(3)); //też słabe - jeśłi będzie więcej niż 1 cyfra (np. 10) - czyli więcej ytaktów to się sypnie\n        const xCord = Number(cellId.charAt(1));\n\n        console.log ( `Y: ${yCord}  X: ${xCord} ` ); \n        console.log ( timeline[yCord][xCord] );\n\n        if (timeline[yCord][xCord] === 0) {\n            timeline[yCord][xCord] = 1;\n        } else {\n            timeline[yCord][xCord] = 0;\n        }\n    }\n})\n\n\n// Obsługa MUTE instrumentu:\n\nfor (let i=0;i<instrumentsBtns.length;i++) {\n   \n    instrumentsBtns[i].addEventListener('click', function(ev) {\n        this.classList.toggle('tabs__btn--icon-notactive');\n\n    \n        \n        if (this.id === 'btn-inst1' && soundCrashFlag === 'on') {\n            soundCrash.volume(0);\n            soundCrashFlag = 'off'\n        } else if (this.id === 'btn-inst1' && soundCrashFlag === 'off') {\n            soundCrash.volume(0.4);\n            soundCrashFlag = 'on'\n        }\n\n        if (this.id === 'btn-inst2' && soundHhFlag === 'on') {\n            soundHh.volume(0);\n            soundHhFlag = 'off'\n        } else if (this.id === 'btn-inst2' && soundHhFlag === 'off') {\n            soundHh.volume(1);\n            soundHhFlag = 'on'\n        }\n\n        if (this.id === 'btn-inst3' && soundTomFlag === 'on') {\n            soundTom.volume(0);\n            soundTomFlag = 'off'\n        } else if (this.id === 'btn-inst3' && soundTomFlag === 'off') {\n            soundTom.volume(1);\n            soundTomFlag = 'on'\n        }\n\n        if (this.id === 'btn-inst4' && soundSnareFlag === 'on') {\n            soundSnare.volume(0);\n            soundSnareFlag = 'off'\n        } else if (this.id === 'btn-inst4' && soundSnareFlag === 'off') {\n            soundSnare.volume(1);\n            soundSnareFlag = 'on'\n        }\n\n\n\n        if (this.id === 'btn-inst5' && soundKickFlag === 'on') {\n            soundKick.volume(0);\n            soundKickFlag = 'off'\n        } else if (this.id === 'btn-inst5' && soundKickFlag === 'off') {\n            soundKick.volume(1);\n            soundKickFlag = 'on'\n        }\n\n      \n        \n        \n    })\n}\n\n\n\n\n}) \n\n\n\n// --------- KOD OBIEKTU\n\n\n// function PlayHead(tempo) {\n//     this.tempo = tempo;\n//     this.counter = 1;\n//     this.timeLine = [\n//         [1,0,0,0,0,0,0,0], // crash\n//         [1,1,1,1,1,1,1,1], // hh\n//         [0,0,0,0,0,0,0,1], // tom\n//         [0,0,1,0,0,0,1,0], // snare\n//         [1,0,0,1,1,0,0,0], // kick\n//     ]\n//     this.start = setInterval(function () {\n//         console.log ( this );\n\n//             if (this.timeline[0][this.counter-1] != 0) { soundCrash.play();}  // inst 1\n//             if (this.timeline[1][this.counter-1] != 0) { soundHh.play();}     // inst 2\n//             if (this.timeline[2][this.counter-1] != 0) { soundTom.play();}    // inst 3\n//             if (this.timeline[3][this.counter-1] != 0) { soundSnare.play();}  // inst 4    \n//             if (this.timeline[4][this.counter-1] != 0) { soundKick.play();}  // inst 5        \n            \n//             this.counter++;\n            \n//             if (this.counter === 9) {\n//                 this.counter = 1;\n//             }\n//         }, this.tempo\n//     )\n        \n//     this.stop = function(){\n//         clearInterval(this.start);\n//     }\n\n    \n//   };\n\n// const playewew = new PlayHead(300);\n\n// playewew.start();\n\n\n"]}